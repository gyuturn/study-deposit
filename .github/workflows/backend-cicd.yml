name: Backend CI

on:
  push:
    branches:
      - cicd/backend-deploy

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b

      - name: Grant execute permission for gradlew
        run: chmod +x ./backend/gradlew

      - name: Build Gradle
        run: cd backend &&  ./gradlew clean bootJar -x test
        env:
          DB_USERNAME: ${{ secrets.MYSQL.ID }}
          DB_PASSWORD: ${{ secrets.MYSQL.PASSWORD }}
          KAKAO_API_KEY: ${{ secrets.KAKAO.API_KEY }}
          KAKAO_SECRET_KEY: ${{ secrets.KAKAO.SECRET_KEY }}
          FRONT_LOGIN_REDIRECT: ${{ secrets.FRONT.LOGIN_REDIRECT }}
          IMPORT_API_KEY: ${{ secrets.IMPORT.API_KEY }}
          IMPORT_API_SECRET_KEY: ${{ secrets.IMPORT.API_SECRET_KEY }}
          EC2_URI: ${{ secrets.EC2.IP }}

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_ID }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: kksy2423/study-deposit-backend
          tags: "test"
          
      - name: Copy jar file to Docker context
        run: cp ./backend/build/libs/deposit-0.0.1-SNAPSHOT.jar ./

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: ./backend
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          
      - name: Execute Server Init Script
        uses: appleboy/ssh-action@master
        with:
          username: ubuntu
          host: ${{ secrets.EC2_IP }}
          key: ${{ secrets.EC2_PASSWORD }}
          script_stop: true
          script: chmod +x /home/ubuntu/docker-compose/deploy.sh && sh /home/ubuntu/docker-compose/deploy.sh
